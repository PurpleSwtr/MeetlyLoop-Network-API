# python commit.py ""

import sys
import os
import subprocess

class Colors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'

def run_command(command, working_dir):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    print(f"{Colors.OKCYAN}‚ñ∂Ô∏è  –í—ã–ø–æ–ª–Ω—è—é: {' '.join(command)}{Colors.ENDC}")
    try:
        # subprocess.run - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã
        result = subprocess.run(
            command,
            cwd=working_dir,    # –£–∫–∞–∑—ã–≤–∞–µ–º, –≥–¥–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
            check=True,         # –í—ã–±—Ä–æ—Å–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π
            capture_output=True,# –ó–∞—Ö–≤–∞—Ç–∏—Ç—å stdout –∏ stderr
            text=True           # –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –≤—ã–≤–æ–¥ –≤ —Ç–µ–∫—Å—Ç
        )
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–≤–æ–¥, –ø–µ—á–∞—Ç–∞–µ–º –µ–≥–æ –∑–µ–ª–µ–Ω—ã–º
        if result.stdout:
            print(f"{Colors.OKGREEN}{result.stdout.strip()}{Colors.ENDC}")
        # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ—Ç git), –ø–µ—á–∞—Ç–∞–µ–º –∏—Ö –∂–µ–ª—Ç—ã–º
        if result.stderr:
            print(f"{Colors.WARNING}{result.stderr.strip()}{Colors.ENDC}")
        return True
    except FileNotFoundError:
        print(f"{Colors.FAIL}‚ùå –û—à–∏–±–∫–∞: –ö–æ–º–∞–Ω–¥–∞ '{command[0]}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH.{Colors.ENDC}")
        return False
    except subprocess.CalledProcessError as e:
        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤–µ—Ä–Ω—É–ª–∞ –∫–æ–¥ –æ—à–∏–±–∫–∏, –ø–µ—á–∞—Ç–∞–µ–º –µ–µ –∫—Ä–∞—Å–Ω—ã–º
        print(f"{Colors.FAIL}‚ùå –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥ {e.returncode}):{Colors.ENDC}")
        print(f"{Colors.FAIL}{e.stderr.strip()}{Colors.ENDC}")
        return False

def main():
    # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–∞–º —Å–∫—Ä–∏–ø—Ç
    # –≠—Ç–æ –∫–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
    repo_path = os.path.dirname(os.path.abspath(__file__))
    print(f"{Colors.HEADER}--- –ó–∞–ø—É—Å–∫ Git-–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {repo_path} ---\n{Colors.ENDC}")

    # 2. –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) < 2:
        print(f"{Colors.FAIL}‚ùå –û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞.{Colors.ENDC}")
        print(f"{Colors.BOLD}–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: python {os.path.basename(__file__)} \"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω –±–∞–≥ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\"{Colors.ENDC}")
        sys.exit(1) # –í—ã—Ö–æ–¥–∏–º —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏

    commit_message = sys.argv[1]

    # 3. –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    commands = [
        ["git", "status"],
        ["git", "add", "."],
        ["git", "commit", "-m", commit_message],
        ["git", "push"]
    ]

    # 4. –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É –ø–æ –æ—á–µ—Ä–µ–¥–∏
    for cmd in commands:
        if not run_command(cmd, repo_path):
            print(f"\n{Colors.FAIL}--- üõë –ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏. ---\n{Colors.ENDC}")
            sys.exit(1)

    print(f"\n{Colors.OKGREEN}--- ‚ú® –í—Å–µ –∫–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! ---\n{Colors.ENDC}")

if __name__ == "__main__":
    main()