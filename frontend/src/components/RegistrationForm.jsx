import { useState } from 'react'; // üëà 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º useState
import { Card, Form, Input, Button, ConfigProvider } from "antd";
import axios from 'axios';
import CustomSwitch from "./Switch.jsx"

export default function RegForm({ onSuccess }) {
  // 2. –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
  const [errorMessage, setErrorMessage] = useState('');

  // –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –≤—Å–µ –ø–æ–ª—è –≤–∞–ª–∏–¥–Ω—ã
  const handleFormFinish = async (values) => {
    setErrorMessage(''); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
    values.description = "";
  
    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥:', values);

    try {
      const response = await axios.post('/api/create_user', values);
      console.log('response:', response.data);
      if (onSuccess) {
        onSuccess();
      }
    } 
    catch (error) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å:", error);
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      setErrorMessage('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'); 
    }
  };   

  // 3. –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ù–ï –ø—Ä–æ–π–¥–µ–Ω–∞
  const handleFormFinishFailed = (errorInfo) => {
    console.log('Validation Failed:', errorInfo);
    setErrorMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.');
  };

  const meetlyColor = "#7259F3"; 

  const theme = {
    token: {
      colorPrimary: meetlyColor,
      borderRadius: 6, 
    },
  };

  return (
    <ConfigProvider theme={theme}>
      <Card 
        variant="bordered"
        className='drop-shadow-xl'
        title={
          <div className="text-center text-xl font-semibold text-meetly">
            –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
          </div>
        }
      >
        <div className="min-h-[380px] flex flex-col justify-center">
          {/* 4. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ Form */}
          <Form 
            layout="vertical" 
            onFinish={handleFormFinish}
            onFinishFailed={handleFormFinishFailed}
          >
            {/* 5. –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (rules) */}
            <Form.Item 
              name="nickname" 
              label="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
              rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!' }]}
            >
              <Input placeholder="username" size="large" /> 
            </Form.Item>

            <Form.Item 
              name="email" 
              label="Email"
              rules={[
                { required: true, message: '–í–≤–µ–¥–∏—Ç–µ email!' },
                { type: 'email', message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!' }
              ]}
            >
              <Input type="email" placeholder="email@example.com" size="large" />
            </Form.Item>

            <Form.Item 
              name="password_hash" 
              label="–ü–∞—Ä–æ–ª—å"
              rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!' }]}
            >
              <Input.Password placeholder="password" size="large" />
            </Form.Item>
            
            <Form.Item className="text-right">
            <CustomSwitch></CustomSwitch>
            </Form.Item>
            <Form.Item>
              <Button type="primary" htmlType="submit" block size="large">
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Button>
            </Form.Item>

            {/* 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å */}
            {errorMessage && (
              <p className="text-center text-lg text-red-400">
                {errorMessage}
              </p>
            )}
          </Form>
        </div>
      </Card>
    </ConfigProvider>
  );
}