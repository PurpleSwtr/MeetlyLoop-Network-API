import { Card, Form, Input, Button, ConfigProvider } from "antd"; // –î–æ–±–∞–≤–∏–ª ConfigProvider, –æ–Ω —É –≤–∞—Å –±—ã–ª
import axios from 'axios';

export default function RegForm({ onSuccess }) {
  const handleFormFinish = async (values) => {
  values.description = "";
  
  console.log('values:', values);

  try {
    // –ü–æ–ª—É—á–∞–µ–º URL –Ω–∞—à–µ–≥–æ API –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vite
    const apiUrl = import.meta.env.VITE_API_URL;

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º axios –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ POST-–∑–∞–ø—Ä–æ—Å–∞
    const response = await axios.post(`${apiUrl}/create_user`, values);

    // –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ response.data
    console.log('response:', response.data);

    if (onSuccess) {
      onSuccess();
    }
  } catch (error) {
    // axios –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ —Å—Ç–∞—Ç—É—Å–∞—Ö 4xx/5xx
    console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å:", error);
    // setResponseMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.'); // <-- –ú–æ–∂–µ—Ç–µ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ç–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }
};

  const meetlyColor = "#7259F3"; 

  const theme = {
    token: {
      colorPrimary: meetlyColor,
      borderRadius: 6, 
    },
  };

  return (
    <ConfigProvider theme={theme}>
      <Card 
        variant="bordered"
        className='drop-shadow-xl'
        title={
          <div className="text-center text-xl font-semibold text-meetly">
            –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
          </div>
        }
      >
        {/* üëá –î–û–ë–ê–í–õ–Ø–ï–ú –≠–¢–û–¢ DIV –° –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ô –í–´–°–û–¢–û–ô üëá */}
        <div className="min-h-[380px] flex flex-col justify-center">
          <Form layout="vertical" onFinish={handleFormFinish}>
            <Form.Item name="nickname" label="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
              <Input placeholder="username" size="large" /> 
            </Form.Item>
            <Form.Item name="email" label="Email">
              <Input type="email" placeholder="email@example.com" size="large" />
            </Form.Item>
            <Form.Item name="password_hash" label="–ü–∞—Ä–æ–ª—å">
              <Input.Password placeholder="password" size="large" />
            </Form.Item>
            <Form.Item>
              <Button type="primary" htmlType="submit" block size="large">
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Button>
            </Form.Item>
          </Form>
        </div> {/* üëà –ò –ó–ê–ö–†–´–í–ê–ï–ú –ï–ì–û */}
      </Card>
    </ConfigProvider>
  );
}