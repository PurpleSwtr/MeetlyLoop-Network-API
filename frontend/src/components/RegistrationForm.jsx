import { Card, Form, Input, Button, ConfigProvider } from "antd"; // –î–æ–±–∞–≤–∏–ª ConfigProvider, –æ–Ω —É –≤–∞—Å –±—ã–ª

export default function RegForm({ onSuccess }) {
  const handleFormFinish = async (values) => {
    values.description = "";
    
    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥:', values);

    
    try {
      // 3. –ò—Å–ø–æ–ª—å–∑—É–µ–º fetch –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ POST-–∑–∞–ø—Ä–æ—Å–∞
      const response = await fetch('http://127.0.0.1:8000/create_user', {
        method: 'POST', // –£–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥
        headers: {
          'Content-Type': 'application/json',
        },
        // –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º –Ω–∞—à JavaScript-–æ–±—ä–µ–∫—Ç –≤ —Å—Ç—Ä–æ–∫—É JSON
        body: JSON.stringify(values),
      });

      // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ "ok" (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—à–∏–±–∫–∞ 500)
      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
      const result = await response.json();
      console.log('–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

    } catch (error) {
      console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å:", error);
      setResponseMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
    }
    if (onSuccess) {
      onSuccess();
    }
  };






   


  const meetlyColor = "#7259F3"; 

  const theme = {
    token: {
      colorPrimary: meetlyColor,
      borderRadius: 6, 
    },
  };

  return (
    <ConfigProvider theme={theme}>
      <Card 
        variant="bordered"
        className='drop-shadow-xl'
        title={
          <div className="text-center text-xl font-semibold text-meetly">
            –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
          </div>
        }
      >
        {/* üëá –î–û–ë–ê–í–õ–Ø–ï–ú –≠–¢–û–¢ DIV –° –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ô –í–´–°–û–¢–û–ô üëá */}
        <div className="min-h-[380px] flex flex-col justify-center">
          <Form layout="vertical" onFinish={handleFormFinish}>
            <Form.Item name="nickname" label="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
              <Input placeholder="username" size="large" /> 
            </Form.Item>
            <Form.Item name="email" label="Email">
              <Input type="email" placeholder="email@example.com" size="large" />
            </Form.Item>
            <Form.Item name="password_hash" label="–ü–∞—Ä–æ–ª—å">
              <Input.Password placeholder="password" size="large" />
            </Form.Item>
            <Form.Item>
              <Button type="primary" htmlType="submit" block size="large">
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Button>
            </Form.Item>
          </Form>
        </div> {/* üëà –ò –ó–ê–ö–†–´–í–ê–ï–ú –ï–ì–û */}
      </Card>
    </ConfigProvider>
  );
}